Rexster is configured through an "XML configuration file":http://github.com/tinkerpop/rexster/blob/master/src/main/resources/com/tinkerpop/rexster/rexster.xml with overriding [[command line|Command Line]] options.  Configuration for Rexster consist of options for server settings like ports and caching and the list of available graphs served by Rexster with their allowed [[Extensions]].

h1. XML Configuration

The XML configuration file has a basic structure as follows:

```xml
<?xml version="1.0" encoding="UTF-8"?>
<rexster>
  <rexster-server-port>8182</rexster-server-port>
  <doghouse-server-port>8183</doghouse-server-port>
  <rexster-shutdown-port>8184</rexster-shutdown-port>
  <rexster-shutdown-host>127.0.0.1</rexster-shutdown-host>
  <rexpro-server-port>8185</rexpro-server-port>
  <base-uri>http://localhost</base-uri>
  <web-root>public</web-root>
  <character-set>UTF-8</character-set>
  <web-server-configuration>
    <com.sun.jersey.config.property.packages>com.tinkerpop.rexster</com.sun.jersey.config.property.packages>
    <com.sun.jersey.spi.container.ContainerResponseFilters>com.tinkerpop.rexster.HeaderResponseFilter</com.sun.jersey.spi.container.ContainerResponseFilters>
  </web-server-configuration>
  <graphs>
    <graph>
      <graph-name>gratefulgraph</graph-name>
      <graph-type>com.tinkerpop.rexster.config.TinkerGraphGraphConfiguration</graph-type>
      <graph-file>data/graph-example-2.xml</graph-file>
      <read-only>false</read-only>
      <extensions>
        <allows>
          <allow>tp:frames</allow>
        </allows>
      </extensions>
    </graph>
    ...
  </graphs>
</rexster>
```

The @<rexster-server-port>@ allows configuration of the port on which Rexster will serve.  The @<doghouse-server-port>@ allows configuration of the port on which [[The Dog House]] web site will be served.  The @<rexster-shutdown-port>@ and @<rexster-shutdown-host>@ allows configuration of the port and host on which Rexster will accept shutdown requests.  The @<rexpro-server-port>@ represents the port on which the [[Rexster Console]] communicates to the Rexster server.  This port utilizes RexPro, short for Rexster Protocol, which is a binary protocol.

The @<base-uri>@ defines the prefix for the URI that the Dog House will use for connecting to Rexster services.  If this value is not specified, it will default to @http://localhost@.  If this value is pointed at @http://localhost@, it is important to note that the Dog House will not be accessible from browsers other than the one on the local machine.  To allow browsers on remote machines to connect, consider using the IP address of the machine that Rexster is installed upon. Furthermore, in standalone mode, Rexster assumes that both servers are being served through the same base URI in the same instance of Grizzly on different ports. 

The @<web-root>@ allows specification of the directory where the root of administration web site web site exists.  The @<character-set>@ configures the character set the request/response from Rexster REST services will support.  If it is not specified then the Rexster will revert to ISO-8859-1.  Rexster will also respect the @Accept-Charset@ request header and revert back to the value of @<character-set>@ if the header is not specified.

The @<web-server-configuration>@ element contains a collection of properties passed to the Jersey runtime and on initialization.  The key element in the set for @<web-server-configuration>@ is the @<com.sun.jersey.config.property.packages>@ element which should contain a semi-colon separated list of packages which inform Jersey where to search for resource classes.  Generally speaking no changes should be made to the contents of this element.

The @<graphs>@ element will contain any number of @<graph>@ configurations.  Each @<graph>@ element will equate to one graph being configured within Rexster.  The exact contents of the @<graph>@ element is dependent upon the type of graph implementation ("OrientDB":http://www.orientechnologies.com/, "neo4j":http://neo4j.org/, etc.) utilized.  However, some key general rules exist for all graph configurations

* The @<graph-name>@ element must be unique within the list of configured graphs.  
* The @<graph-enabled>@ element may be applied to any @<graph>@.  Setting its contents to "false" will prevent that graph from loading to Rexster.  If the element is not present at all (or set explicitly to true) the graph will be loaded.
* The @<graph-type>@ element is the full name of a class that implements the @GraphConfiguration@ interface.  The @GraphConfiguration@ is responsible for using the properties supplied to it from the configuration file to produce a fully configured @Graph@ instance.  This approach allows a plug-in approach to providing new support for Graph implementations without requiring access to Rexster code.  In addition to explicitly specifying the class name, the value of @graph-type@ may contain one of several out-of-the-box options: "tinkergraph", "orientgraph", "neo4jgraph", "memorystoresailgraph", "nativestoresailgraph", and "neo4jsailgraph".  Please read the configuration options for each of these defined below for more information on the configuration options expected for each type.
* The @<read-only>@ element will configure a graph so that its data cannot be modified.  Set to true to enable this feature.  If the element is not present graphs will default this value to false.
* The @<extensions>@ element defines the [[Extensions]] to be exposed for this graph.   Within @<extensions>@ there are two other elements: @<allows>@ and @<extension>@.
** The @<allows>@ element defines a collection of @<allow>@ elements where each contains the Extensions that are to be exposed for this graph.  The value of the @<allow>@ is an expression that consists of a namespace and extension name separated by a colon, as in @namespace:extension@.  Wildcards are allowed where one wishes to configure all extensions in all namespaces identified by Rexster as denoted by @*:*@ and where one wishes to configure all extensions within a given namespace as denoted by @namespace:*@.
** Zero or more @<extension>@ elements may exists within @<extensions>@.  The purpose of this element is to pass graph specific configuration options to the Extension.  These configurations will be Extension specific so be sure to check the individual configuration options for that Extension.  There are three expected elements within an @<extension>@ element: @<namespace>@, @<name>@ and @<configuration>@.
*** The @<namespace>@ element defines the namespace of the extension to be configured.
*** The @<name>@ element defines the name of the extension to be configured.
*** The <@configuration>@ contains Extension specific configuration options (refer to the specific Extension for what the contents of this element should be.

The following sections define the common settings for each available graph type:

h2. TinkerGraph

A "TinkerGraph":http://wiki.github.com/tinkerpop/gremlin/tinkergraph would be configured as follows:

```xml
<graph>
  <graph-name>gratefulgraph</graph-name>
  <graph-type>tinkergraph</graph-type>
  <graph-file>data/graph-example-2</graph-file>
  <extensions>...</extensions>
</graph>
```

The @<graph-type>@ could also be explicitly specified as:

```text
<graph-type>com.tinkerpop.rexster.config.TinkerGraphGraphConfiguration</graph-type>
```

The @<graph-file>@ element contains the location of the TinkerGraph.  If this value is not specified, then the TinkerGraph will behave as an in-memory graph only.

h2. Neo4j

A "Neo4j":http://neo4j.org/ graph would be configured as follows:

```xml
<graph>
  <graph-name>neo4jsample</graph-name>
  <graph-type>neo4jgraph</graph-type>
  <graph-file>/tmp/rexster-graph</graph-file>
  <extensions>...</extensions>>
  <properties>
    <!-- Memory mapped I/O settings -->
    <!-- For high traversal speed it is important to have the nodestore.db and relationshipstore.db files. -->
    <neostore.nodestore.db.mapped_memory>285M</neostore.nodestore.db.mapped_memory>
    <neostore.relationshipstore.db.mapped_memory>285M</neostore.relationshipstore.db.mapped_memory>
    <neostore.propertystore.db.mapped_memory>100M</neostore.propertystore.db.mapped_memory>
    <neostore.propertystore.db.strings.mapped_memory>100M</neostore.propertystore.db.strings.mapped_memory>
    <neostore.propertystore.db.arrays.mapped_memory>10M</neostore.propertystore.db.arrays.mapped_memory>
    <neostore.propertystore.db.index.mapped_memory>10M</neostore.propertystore.db.index.mapped_memory>
    <neostore.propertystore.db.index.keys.mapped_memory>10M</neostore.propertystore.db.index.keys.mapped_memory>
    ...
    </properties>
</graph>
```

The @<graph-type>@ could also be explicitly specified as:

```text
<graph-type>com.tinkerpop.rexster.config.Neo4jGraphConfiguration</graph-type>
```

The @<properties>@ element contains neo4j specific configuration values.  Any entries placed here will be converted to name/value pairs to be passed into neo4j for its configuration.  Set any properties here as would have been done in a neo4j.properties file.

h2. Sail

There are several "Sail":http://www.openrdf.org/doc/sesame2/2.3.0/users/ch08.html configurations available: Memory Store and Native Store.

h3. Memory Store

```xml
<graph>
  <graph-name>sailsample</graph-name>
  <graph-type>memorystoresailgraph</graph-type>
  <extensions>...</extensions>
</graph>
```

The @<graph-type>@ could also be explicitly specified as:

```text
<graph-type>com.tinkerpop.rexster.config.MemoryStoreSailGraphConfiguration</graph-type>
```

h3. Native Store Sail Graph

```xml
<graph>
  <graph-name>sailsample</graph-name>
  <graph-type>nativestoresailgraph</graph-type>
  <graph-file>tmp/data/sail</graph-file>
  <extensions>...</extensions>
</graph>
```

The @<graph-type>@ could also be explicitly specified as:

```text
<graph-type>com.tinkerpop.rexster.config.NativeStoreSailGraphConfiguration</graph-type>
```

The @<graph-file>@ element is location of the directory containing the Sail data which will be loaded to Rexster .  This value is a required element of configuration.

h2. OrientDB

An "OrientDB":http://www.orientechnologies.com/ graph would be configured as follows:

```xml
<graph>
  <graph-name>orientdbsample</graph-name>
  <graph-type>orientgraph</graph-type>
  <graph-file>local:C:/data/graph/graph</graph-file>
  <extensions>...</extensions>
  <properties>
    <username>admin</username>
    <password>admin</password>
  </properties>
</graph>
```

The @<graph-type>@ could also be explicitly specified as:

```text
<graph-type>com.tinkerpop.rexster.config.OrientGraphConfiguration</graph-type>
```

The @<graph-file>@ element is the URL to the OrientDB database Rexster is expected to connect to.  The @<properties>@ element requires two elements @<username>@ and @<password>@ to access the OrientDB graph instance.  

When specifying a remote connection to OrientDB it is important to include the following jars in Rexster classpath:

* orientdb-client*.jar
* orientdb-enterprise*.jar

h2. DEX

A "DEX":http://www.sparsity-technologies.com/dex graph would be configured as follows:

```xml
<graph>
  <graph-name>dexsample</graph-name>
  <graph-type>dexgraph</graph-type>
  <graph-file>/tmp/graph.dex</graph-file>
  <extensions>...</extensions>
</graph>
```

The @<graph-type>@ could also be explicitly specified as:

```text
<graph-type>com.tinkerpop.rexster.config.DexGraphConfiguration</graph-type>
```

The @<graph-file>@ element contains the path to the DEX file name.

h2. RexsterGraph

A "RexsterGraph":https://github.com/tinkerpop/blueprints/wiki/Rexster-Implementation graph would be configured as follows:

```xml
<graph>
  <graph-name>remotetinkergraph</graph-name>
  <graph-type>rexstergraph</graph-type>
  <graph-buffer-size>100</graph-buffer-size>
  <graph-file>http://remoterexsterserver:8182/tinkergraph</graph-file>
  <extensions>...</extensions>
</graph>
```

The @<graph-type>@ could also be explicitly specified as:

```text
<graph-type>com.tinkerpop.rexster.config.RexsterGraphGraphConfiguration</graph-type>
```

The @<graph-file>@ element contains the URI to the specific graph hosted within the remote Rexster instance.

The @<graph-buffer-size>@ element defines the buffer size property for the @RexsterGraph@.